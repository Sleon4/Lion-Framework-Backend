<?php

declare(strict_types=1);

define('LION_START', microtime(true));

/**
 * -----------------------------------------------------------------------------
 * Register The Auto Loader
 * -----------------------------------------------------------------------------
 * Composer provides a convenient, automatically generated class loader for
 * this application
 * -----------------------------------------------------------------------------
 **/

require_once('./vendor/autoload.php');

/**
 * -----------------------------------------------------------------------------
 * Database initialization
 * -----------------------------------------------------------------------------
 * */

\LionDatabase\Driver::run([
    'default' => env->DB_NAME,
    'connections' => [
        env->DB_NAME => [
            'type' => env->DB_TYPE,
            'host' => env->DB_HOST,
            'port' => env->DB_PORT,
            'dbname' => env->DB_NAME,
            'user' => env->DB_USER,
            'password' => env->DB_PASSWORD
        ]
    ]
]);

/**
 * -----------------------------------------------------------------------------
 * Initialize Http parameters (Middleware/Rules)
 * -----------------------------------------------------------------------------
 * */

include_once('./routes/rules.php');
include_once('./routes/middleware.php');

/**
 * -----------------------------------------------------------------------------
 * Run The lion Application
 * -----------------------------------------------------------------------------
 * This is where the commands for your application are executed
 * -----------------------------------------------------------------------------
 **/

$commands = [
    // All
    \LionBundle\Commands\InfoCommand::class,
    \LionBundle\Commands\RunTestCommand::class,
    \LionBundle\Commands\ServerCommand::class,
    // // AES
    \LionBundle\Commands\AES\NewAESCommand::class,
    // DB
    ...[
        ...[
            // MySQL
            \LionBundle\Commands\DB\MySQL\DBCapsuleCommand::class,
            \LionBundle\Commands\DB\MySQL\DBCapsulesCommand::class
        ]
    ],
    // NEW
    \LionBundle\Commands\New\CapsuleCommand::class,
    \LionBundle\Commands\New\CommandsCommand::class,
    \LionBundle\Commands\New\ControllerCommand::class,
    \LionBundle\Commands\New\ModelCommand::class,
    \LionBundle\Commands\New\EnumsCommand::class,
    \LionBundle\Commands\New\InterfaceCommand::class,
    \LionBundle\Commands\New\TestCommand::class,
    \LionBundle\Commands\New\TraitCommand::class,
    \LionBundle\Commands\New\MiddlewareCommand::class,
    \LionBundle\Commands\New\RulesCommand::class,
    // Route
    \LionBundle\Commands\Route\RouteListCommand::class,
    // RSA
    \LionBundle\Commands\RSA\NewRSACommand::class,
    // SH
    \LionBundle\Commands\SH\SHFileCommand::class,
    // Sockets
    \LionBundle\Commands\Sockets\NewSocketCommand::class
];

$kernel = new \LionCommand\Kernel();
$container = new \LionBundle\Helpers\Commands\Container();
$application = $kernel->getApplication();

foreach ($commands as $command) {
    $application->add($container->injectDependencies(new $command()));
}

$kernel->setApplication($application)->run();
