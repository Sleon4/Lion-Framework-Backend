<?php

/**
 * ------------------------------------------------------------------------------
 * Register The Auto Loader
 * ------------------------------------------------------------------------------
 * Composer provides a convenient, automatically generated class loader for
 * this application
 * ------------------------------------------------------------------------------
 **/

require_once("vendor/autoload.php");

/**
 * ------------------------------------------------------------------------------
 * Register environment variable loader automatically
 * ------------------------------------------------------------------------------
 * .dotenv provides an easy way to access environment variables with $_ENV
 * ------------------------------------------------------------------------------
 **/

(Dotenv\Dotenv::createImmutable(__DIR__))->load();
define('env', (object) $_ENV);

/**
 * ------------------------------------------------------------------------------
 * Import route for RSA
 * ------------------------------------------------------------------------------
 * Load default route for RSA
 * ------------------------------------------------------------------------------
 **/

if (env->RSA_URL_PATH != '') {
    LionSecurity\RSA::$url_path = env->RSA_URL_PATH;
}

/**
 * ------------------------------------------------------------------------------
 * Start database service
 * ------------------------------------------------------------------------------
 * Upload data to establish a connection
 * ------------------------------------------------------------------------------
 **/

LionSQL\Drivers\MySQLDriver::init([
    'type' => env->DB_TYPE,
    'host' => env->DB_HOST,
    'port' => env->DB_PORT,
    'dbname' => env->DB_NAME,
    'user' => env->DB_USER,
    'password' => env->DB_PASSWORD
]);

/**
 * ------------------------------------------------------------------------------
 * Console Routes
 * ------------------------------------------------------------------------------
 * This is where you can record your commands for your application
 * ------------------------------------------------------------------------------
 **/

use Symfony\Component\Console\Application;

$web_commands = include_once("routes/console.php");

$commands = [
    \App\Console\Framework\ControllerCommand::class,
    \App\Console\Framework\ModelCommand::class,
    \App\Console\Framework\MiddlewareCommand::class,
    \App\Console\Framework\CommandsCommand::class,
    \App\Console\Framework\TestCommand::class,
    \App\Console\Framework\ServerCommand::class,
    \App\Console\Framework\RunTestCommand::class,
    \App\Console\Framework\RulesCommand::class,
    \App\Console\Framework\RSACommand::class,
    \App\Console\Framework\GenerateJWTCommand::class,
    \App\Console\Framework\RouteListCommand::class,
    \App\Console\Framework\CapsuleCommand::class,
    \App\Console\Framework\AllCapsulesCommand::class,
    \App\Console\Framework\FactoryCommand::class,
    \App\Console\Framework\TraitCommand::class,
    \App\Console\Framework\SeedCommand::class,
    ...$web_commands
];

$application = new Application('Lion-Framework');

foreach ($commands as $key => $command) {
    $application->add(new $command());
}

$application->run();